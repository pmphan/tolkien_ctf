version: "3.9"

services:

  frontend-service:
    image: frontend-service:0.0.1-${FRONTEND_ENV:-dev}
    container_name: frontend-service
    build:
      context: ./frontend-service
      target: ${FRONTEND_ENV:-dev}
    networks:
      - frontend
    secrets:
      - jwtpublickey
    ports:
      - 3000:80
    restart: unless-stopped

  backend-service:
    image: backend-service:0.0.1
    container_name: backend-service
    build:
      context: ./backend-service
    networks:
      - frontend
      - backend
    secrets:
      - jwtpublickey
      - jwtprivatekey
    environment:
      SERVICE_ENV: ${BACKEND_ENV:-dev}
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-development}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-development}"]
    networks:
      - backend
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-development}
    restart: unless-stopped

networks:
  frontend: {}
  backend: {}

volumes:
  postgresdata:
    driver: local

secrets:
  jwtprivatekey:
    file: ./backend-service/secret/jwt.key
  jwtpublickey:
    file: ./backend-service/secret/jwt.pub
